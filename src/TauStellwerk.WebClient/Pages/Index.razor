@page "/"
@using TauStellwerk.Client.Services
@using TauStellwerk.Client.Model

@inject ModalManager _modalManager;
@inject ISettingsService _settingsService;
@inject IJSRuntime _jsRuntime;

<StopButton />
<ControlContainer />

<SelectionContainer/>
<SettingsModal/>
<MessageBoxModal/>

<footer>
    <button class="is-pulled-left button-secondary" id="UsernameLabel" @onclick="() => _modalManager.IsSettingsModalVisible = true" >User: @_settings?.Username</button>
    <button class="is-pulled-right button-secondary" @onclick="() => _modalManager.IsSettingsModalVisible = true" >Settings</button>
</footer>

@code
{
    private ImmutableSettings? _settings;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _settingsService.SettingsChanged +=async settings =>
        {
            _settings = settings;
            await _jsRuntime.InvokeVoidAsync("setTheme", _settings.Theme);


            StateHasChanged();
        };

        _settings = await _settingsService.GetSettings();
        await _jsRuntime.InvokeVoidAsync("setTheme", _settings.Theme);
    }
}
@using System.Collections.Immutable
@using System.ComponentModel
@using TauStellwerk.Client.Model
@using System.Buffers.Text
@using TauStellwerk.Client.Model.Engine

<picture class="@Class">
    @if (!_hasErrorOccurredYet)
    {
        @foreach (var imageset in Images.GroupBy(e => e.Importance).OrderBy(x => x.Key))
        {
            var srcset = string.Join(',', imageset.Select(i => $"images/{i.Filename}?v={ImageTimestamp:X} {i.Width}w"));
            <source sizes="@Sizes" srcset="@srcset" type="@imageset.FirstOrDefault()?.Type">
        }
    }
    <img @onerror="() => { _hasErrorOccurredYet = true; }" src="img/noImageImage.png" alt="Engine image"/>
</picture>

@code {

    private bool _hasErrorOccurredYet = false;

    [Parameter]
    [EditorRequired]
    public ImmutableList<EngineImage> Images { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public string Sizes { get; set; } = string.Empty;
    
    [Parameter]
    [EditorRequired]
    public int ImageTimestamp { get; set; }

    [Parameter]
    public string Class { get; set; } = string.Empty;
}

@using TauStellwerk.Client.Model.Settings
@using TauStellwerk.Client.Services
@using TauStellwerk.Client.Model
@using System.ComponentModel

@inject ModalManager ModalManager
@inject ISettingsService SettingsService
@inject IJSRuntime JsRuntime

<div class="modal @(ModalManager.IsSettingsModalVisible ? "active-modal" : "inactive-modal")">
    <div class="modal-content">
        <EditForm Model="typeof(MutableSettings)">
            <div class="form-group" title="The username that will be shown to other users.">
                <label for="UsernameInput">Username:</label>
                <input required="required" type="text" id="UsernameInput" @bind="_settings.Username"/>
            </div>
            <div class="form-group" title="Color-scheme for the application">
                <label for="themeSetting">Theme:</label>
                <InputSelect @bind-Value="_settings.Theme" Id="themeSetting">
                    <option value="light">Light</option>
                    <option value="dark">Dark</option>
                </InputSelect>
            </div>
            <div class="form-group" title="">
                
                @if (IsWakeLockSupported)
                {
                    <label>Prevent device from going to sleep while TauStellwerk is open (WakeLock)?</label>
                    <InputCheckbox @bind-Value="_settings.WakeLock" />
                }
                else
                {
                    <label>Prevent device from going to sleep while TauStellwerk is open (WakeLock)?</label>
                    <input type="checkbox" disabled Value="false" />
                    <p>WakeLock doesn't seem to be available. The wakeLock functionallity only works on certain browsers and requires https ("Secure Context").
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/WakeLock" target="_blank">See here for a list of browsers that support this feature.</a>
                    </p>
                }
            </div>
            <p>TauStellwerk @ThisAssembly.AssemblyInformationalVersion (.NET @Environment.Version)</p>
            <p>Report issues and request features <a href="https://github.com/nic547/TauStellwerk/issues" target="_blank">here</a>.</p>
            <button type="button" @onclick="SaveAndClose" class="is-pulled-right">Save</button>
            <button type="button" @onclick="CloseWithoutSaving" class="is-pulled-right">Cancel</button>
        </EditForm>
    </div>
</div>
@code {
    private MutableSettings _settings = new();

    private bool IsWakeLockSupported { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ModalManager.PropertyChanged += HandleModalManagerNotification;
        IsWakeLockSupported = await JsRuntime.InvokeAsync<bool>("isWakeLockSupported");
    }

    private async void HandleModalManagerNotification(object? sender, PropertyChangedEventArgs args)
    {
        if (args.PropertyName != nameof(ModalManager.IsSettingsModalVisible))
        {
            return;
        }

        if (ModalManager.IsSettingsModalVisible)
        {
            _settings = await SettingsService.GetMutableSettingsCopy();
        }

        StateHasChanged();
    }

    private void SaveAndClose()
    {
        SettingsService.SetSettings(_settings);
        ModalManager.IsSettingsModalVisible = false;
    }

    private void CloseWithoutSaving()
    {
        ModalManager.IsSettingsModalVisible = false;
    }
}
@using TauStellwerk.Client.Services
@using TauStellwerk.Client.Model
@using System.ComponentModel

@inject ModalManager ModalManager
@inject ISettingsService SettingsService
<div class="modal @(ModalManager.IsSettingsModalVisible ? "active-modal" : "inactive-modal")">
    <div class="modal-content">
        <EditForm Model="typeof(MutableSettings)">
            <div class="form-group" title="The username that will be shown to other users.">
                <label for="UsernameInput">Username:</label>
                <input required="required" type="text" id="UsernameInput" @bind="_settings.Username"/>
            </div>
            <div class="form-group" title="Color-scheme for the application">
                <label for="themeSetting">Theme:</label>
                <InputSelect @bind-Value="_settings.Theme" Id="themeSetting">
                    <option value="light">Light</option>
                    <option value="dark">Dark</option>
                </InputSelect>
            </div>
            <button type="button" @onclick="SaveAndClose" class="is-pulled-right">Save</button>
            <button type="button" @onclick="CloseWithoutSaving" class="is-pulled-right">Cancel</button>
        </EditForm>
    </div>
</div>
@code {
    private MutableSettings _settings = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ModalManager.PropertyChanged += HandleModalManagerNotification;
    }

    private async void HandleModalManagerNotification(object? sender, PropertyChangedEventArgs args)
    {
        if (args.PropertyName != nameof(ModalManager.IsSettingsModalVisible))
        {
            return;
        }

        if (ModalManager.IsSettingsModalVisible)
        {
            _settings = await SettingsService.GetMutableSettingsCopy();
        }

        StateHasChanged();
    }

    private void SaveAndClose()
    {
        SettingsService.SetSettings(_settings);
        ModalManager.IsSettingsModalVisible = false;
    }

    private void CloseWithoutSaving()
    {
        ModalManager.IsSettingsModalVisible = false;
    }
}
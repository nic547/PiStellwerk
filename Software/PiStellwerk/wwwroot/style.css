:root {
    font-family: sans-serif;
	user-select: none;

	--background-main: #303030;
	--background-secondary: #202020;
	--background-highlight: #404040;
	--textcolor-main: #FFFFFF;
	--textcolor-secondary: #EEEEEE; 
}

html {
	height: 100%;
}

body {
	background-color: var(--background-main);
	color: var(--textcolor-main);
	display:flex;
	height: 100%;
	flex-direction:column;
	align-items: stretch;
}

.title {
	font-size: 1.5em
}

.secondary {
	color: var(--textcolor-secondary);
}

#CommandButton {

	width: 100%;
	margin: 0;
	text-align: center;
	padding: 1em;
	flex: 0 0 auto;
    z-index: 100; /* Should always be displayed on top, even on overlays*/
}

@media (min-width: 900px) {
	#CommandButton {
		width: 80%;
		margin: 0 auto;
	}
}

.StoppedButton {
	background-color: #B00020;
}

.StoppedBlockingButton {
	background-color: #CF6679;
}

.RunningButton {
	background-color: Highlight;
	color: black;
}

#EngineContainer {
	display: flex;
	flex: 1 0 auto;
	flex-direction: row;
	overflow-x: scroll;
	overflow-y: hidden;
	}

.EngineControl {
	background-color: var(--background-secondary);
	padding: 2px;
	margin: 3px;
	height: 100%;
	display: grid;
	grid-template-areas: "header header"
						 "slider functions"
						 "speed functions";
	grid-template-columns: 5em auto;
	grid-template-rows: 2.5em auto 2.5em;
	justify-items: center;
	flex: 0 0 25em;
}

.template {
	display: none;
}


.HeaderWithButton {
    display: flex;
    height: 2em;
    box-sizing: border-box;
	width: 100%;
}

.HeaderWithButton > header  {
    flex: 1 1 auto;
    text-align: center;
}

.HeaderWithButton > button {
    width: 2em;
    flex: 0 0 2em;
}

.EngineControl > input {
	grid-area: slider;
}

.EngineControl > output {
	grid-area: speed;
}

.EngineControl > .EngineFunctions {
	grid-area: functions;
}


#EngineSelectionContainer {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
	grid-template-rows: 1fr 1fr 1fr 1fr;
}

.EngineSelectionItem {
    padding: 5px;
    margin: 2px;
    background-color: var(--background-highlight);
}

.Overlay {
    position: fixed; /* Sit on top of the page content */
    display: none; /* Hidden by default */
    width: 100%; /* Full width (cover the whole page) */
    height: 100%; /* Full height (cover the whole page) */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,0.5); /* Black background with opacity */
    z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
    cursor: pointer; /* Add a pointer on hover */
}


.OverlayWindow {
    display: block;
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    padding: 5px;
    background-color: var(--background-secondary);
}

form * {
    display: block;
    margin: 2px;
}

footer {
	width: 100%;
	background-color: var(--background-highlight);
	flex: 0 0 auto;
}
